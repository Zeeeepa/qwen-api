{
  "openapi": "3.1.0",
  "info": {
    "title": "Qwen API",
    "version": "1.0.0",
    "description": "OpenAPI specification for the Qwen API Proxy. Endpoints are OpenAI-compatible and proxied to Qwen services."
  },
  "servers": [
    {
      "url": "https://qwen.aikit.club/v1"
    },
    {
      "url": "https://{host}/v1",
      "variables": {
        "host": {
          "default": "qwen.aikit.club"
        }
      }
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "param": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "code": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  }
                ]
              }
            },
            "required": [
              "message",
              "type",
              "code"
            ]
          }
        },
        "required": [
          "error"
        ]
      },
      "ModelObject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "example": "model"
          },
          "owned_by": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "required": [
          "id",
          "object"
        ]
      },
      "ModelList": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "example": "list"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "object": {
                  "type": "string",
                  "example": "model"
                },
                "owned_by": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "id",
                "object"
              ]
            }
          }
        },
        "required": [
          "object",
          "data"
        ]
      },
      "ChatContentText": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "text"
            ]
          },
          "text": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "text"
        ]
      },
      "UrlRef": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          }
        },
        "required": [
          "url"
        ]
      },
      "ChatContentImageUrl": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "image_url"
            ]
          },
          "image_url": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              }
            },
            "required": [
              "url"
            ]
          }
        },
        "required": [
          "type",
          "image_url"
        ]
      },
      "ChatContentAudioUrl": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "audio_url"
            ]
          },
          "audio_url": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              }
            },
            "required": [
              "url"
            ]
          }
        },
        "required": [
          "type",
          "audio_url"
        ]
      },
      "ChatContentVideoUrl": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "video_url"
            ]
          },
          "video_url": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              }
            },
            "required": [
              "url"
            ]
          }
        },
        "required": [
          "type",
          "video_url"
        ]
      },
      "ChatContentFileUrl": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "file_url"
            ]
          },
          "file_url": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              }
            },
            "required": [
              "url"
            ]
          }
        },
        "required": [
          "type",
          "file_url"
        ]
      },
      "ChatContentPart": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "text"
                ]
              },
              "text": {
                "type": "string"
              }
            },
            "required": [
              "type",
              "text"
            ]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "image_url"
                ]
              },
              "image_url": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  }
                },
                "required": [
                  "url"
                ]
              }
            },
            "required": [
              "type",
              "image_url"
            ]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "audio_url"
                ]
              },
              "audio_url": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  }
                },
                "required": [
                  "url"
                ]
              }
            },
            "required": [
              "type",
              "audio_url"
            ]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "video_url"
                ]
              },
              "video_url": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  }
                },
                "required": [
                  "url"
                ]
              }
            },
            "required": [
              "type",
              "video_url"
            ]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "file_url"
                ]
              },
              "file_url": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  }
                },
                "required": [
                  "url"
                ]
              }
            },
            "required": [
              "type",
              "file_url"
            ]
          }
        ]
      },
      "ChatMessage": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "enum": [
              "system",
              "user",
              "assistant",
              "tool"
            ]
          },
          "content": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "text"
                          ]
                        },
                        "text": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "text"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "image_url"
                          ]
                        },
                        "image_url": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "url"
                          ]
                        }
                      },
                      "required": [
                        "type",
                        "image_url"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "audio_url"
                          ]
                        },
                        "audio_url": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "url"
                          ]
                        }
                      },
                      "required": [
                        "type",
                        "audio_url"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "video_url"
                          ]
                        },
                        "video_url": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "url"
                          ]
                        }
                      },
                      "required": [
                        "type",
                        "video_url"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "file_url"
                          ]
                        },
                        "file_url": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "url"
                          ]
                        }
                      },
                      "required": [
                        "type",
                        "file_url"
                      ]
                    }
                  ]
                }
              }
            ]
          }
        },
        "required": [
          "role",
          "content"
        ]
      },
      "ToolDefinition": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "web_search",
              "code"
            ]
          }
        },
        "required": [
          "type"
        ]
      },
      "ChatRequest": {
        "type": "object",
        "properties": {
          "model": {
            "type": "string",
            "description": "Model ID (e.g., qwen-max-latest, qwen3-coder-plus, qwen-deep-research)"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "role": {
                  "type": "string",
                  "enum": [
                    "system",
                    "user",
                    "assistant",
                    "tool"
                  ]
                },
                "content": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "text"
                                ]
                              },
                              "text": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "text"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "image_url"
                                ]
                              },
                              "image_url": {
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "url"
                                ]
                              }
                            },
                            "required": [
                              "type",
                              "image_url"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "audio_url"
                                ]
                              },
                              "audio_url": {
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "url"
                                ]
                              }
                            },
                            "required": [
                              "type",
                              "audio_url"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "video_url"
                                ]
                              },
                              "video_url": {
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "url"
                                ]
                              }
                            },
                            "required": [
                              "type",
                              "video_url"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "file_url"
                                ]
                              },
                              "file_url": {
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "url"
                                ]
                              }
                            },
                            "required": [
                              "type",
                              "file_url"
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "required": [
                "role",
                "content"
              ]
            }
          },
          "stream": {
            "type": "boolean",
            "default": false
          },
          "tools": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "web_search",
                    "code"
                  ]
                }
              },
              "required": [
                "type"
              ]
            }
          },
          "enable_thinking": {
            "type": "boolean",
            "description": "Enable reasoning/thinking mode"
          },
          "thinking_budget": {
            "type": "integer",
            "description": "Thinking budget in ms"
          }
        },
        "required": [
          "model",
          "messages"
        ]
      },
      "ChatChoiceMessage": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "reasoning_content": {
            "type": "string"
          }
        },
        "required": [
          "role",
          "content"
        ]
      },
      "ChatCompletionChoice": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer"
          },
          "message": {
            "type": "object",
            "properties": {
              "role": {
                "type": "string"
              },
              "content": {
                "type": "string"
              },
              "reasoning_content": {
                "type": "string"
              }
            },
            "required": [
              "role",
              "content"
            ]
          },
          "finish_reason": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "required": [
          "index",
          "message"
        ]
      },
      "ChatResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "example": "chat.completion"
          },
          "created": {
            "type": "integer"
          },
          "model": {
            "type": "string"
          },
          "system_fingerprint": {
            "type": "string"
          },
          "choices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "index": {
                  "type": "integer"
                },
                "message": {
                  "type": "object",
                  "properties": {
                    "role": {
                      "type": "string"
                    },
                    "content": {
                      "type": "string"
                    },
                    "reasoning_content": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "role",
                    "content"
                  ]
                },
                "finish_reason": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "index",
                "message"
              ]
            }
          }
        },
        "required": [
          "id",
          "object",
          "created",
          "model",
          "choices"
        ]
      },
      "ValidateRequest": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Compressed token produced by the README JS snippet"
          }
        },
        "required": [
          "token"
        ]
      },
      "GenericUpstreamResponse": {
        "type": "object",
        "description": "Upstream response passthrough",
        "additionalProperties": true
      },
      "ImageGenerationRequest": {
        "type": "object",
        "properties": {
          "prompt": {
            "type": "string"
          },
          "size": {
            "type": "string",
            "example": "1024x1024",
            "description": "Target size; proxy maps to aspect ratio"
          }
        },
        "required": [
          "prompt"
        ]
      },
      "ImageOrVideoResponse": {
        "type": "object",
        "properties": {
          "created": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string"
                }
              },
              "required": [
                "url"
              ]
            }
          }
        },
        "required": [
          "created",
          "data"
        ]
      },
      "ImageEditJsonRequest": {
        "type": "object",
        "properties": {
          "prompt": {
            "type": "string"
          },
          "image": {
            "oneOf": [
              {
                "type": "string",
                "format": "uri",
                "description": "Remote image URL"
              },
              {
                "type": "string",
                "description": "Data URL base64 image"
              }
            ]
          }
        },
        "required": [
          "prompt",
          "image"
        ]
      }
    }
  },
  "paths": {
    "/models": {
      "get": {
        "summary": "List available models",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object": {
                      "type": "string",
                      "example": "list"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "object": {
                            "type": "string",
                            "example": "model"
                          },
                          "owned_by": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "object"
                        ]
                      }
                    }
                  },
                  "required": [
                    "object",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "param": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "code": {
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "integer"
                            }
                          ]
                        }
                      },
                      "required": [
                        "message",
                        "type",
                        "code"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/validate": {
      "post": {
        "summary": "Validate compressed token (via request body)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "Compressed token produced by the README JS snippet"
                  }
                },
                "required": [
                  "token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Validation result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Upstream response passthrough",
                  "additionalProperties": true
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "param": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "code": {
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "integer"
                            }
                          ]
                        }
                      },
                      "required": [
                        "message",
                        "type",
                        "code"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Validate compressed token (via query parameter)",
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Compressed token from JS snippet"
          }
        ],
        "responses": {
          "200": {
            "description": "Validation result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Upstream response passthrough",
                  "additionalProperties": true
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "param": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "code": {
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "integer"
                            }
                          ]
                        }
                      },
                      "required": [
                        "message",
                        "type",
                        "code"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/refresh": {
      "post": {
        "summary": "Refresh authentication token (via request body)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "Compressed token produced by the README JS snippet"
                  }
                },
                "required": [
                  "token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token refresh result with compressed access_token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Upstream response passthrough",
                  "additionalProperties": true
                },
                "examples": {
                  "success": {
                    "summary": "Successful token refresh",
                    "value": {
                      "timestamp": "2025-01-21 02:58:14 UTC (2025-01-21 08:28:14 IST, UTC+05:30)",
                      "expires_at": 1737447494,
                      "access_token": "H4sIAAAAAAAAA+2VyQ6CQAyF...compressed_gzip_data..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "param": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "code": {
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "integer"
                            }
                          ]
                        }
                      },
                      "required": [
                        "message",
                        "type",
                        "code"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Refresh authentication token (via query parameter)",
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Current token for refresh"
          }
        ],
        "responses": {
          "200": {
            "description": "Token refresh result with compressed access_token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Upstream response passthrough",
                  "additionalProperties": true
                },
                "examples": {
                  "success": {
                    "summary": "Successful token refresh",
                    "value": {
                      "timestamp": "2025-01-21 02:58:14 UTC (2025-01-21 08:28:14 IST, UTC+05:30)",
                      "expires_at": 1737447494,
                      "access_token": "H4sIAAAAAAAAA+2VyQ6CQAyF...compressed_gzip_data..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "param": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "code": {
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "integer"
                            }
                          ]
                        }
                      },
                      "required": [
                        "message",
                        "type",
                        "code"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/chat/completions": {
      "post": {
        "summary": "Create chat completion (OpenAI-compatible)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "model": {
                    "type": "string",
                    "description": "Model ID (e.g., qwen-max-latest, qwen3-coder-plus, qwen-deep-research)"
                  },
                  "messages": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "role": {
                          "type": "string",
                          "enum": [
                            "system",
                            "user",
                            "assistant",
                            "tool"
                          ]
                        },
                        "content": {
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "text"
                                        ]
                                      },
                                      "text": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "text"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "image_url"
                                        ]
                                      },
                                      "image_url": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "url"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "image_url"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "audio_url"
                                        ]
                                      },
                                      "audio_url": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "url"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "audio_url"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "video_url"
                                        ]
                                      },
                                      "video_url": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "url"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "video_url"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "file_url"
                                        ]
                                      },
                                      "file_url": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "url"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "file_url"
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      "required": [
                        "role",
                        "content"
                      ]
                    }
                  },
                  "stream": {
                    "type": "boolean",
                    "default": false
                  },
                  "tools": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "web_search",
                            "code"
                          ]
                        }
                      },
                      "required": [
                        "type"
                      ]
                    }
                  },
                  "enable_thinking": {
                    "type": "boolean",
                    "description": "Enable reasoning/thinking mode"
                  },
                  "thinking_budget": {
                    "type": "integer",
                    "description": "Thinking budget in ms"
                  }
                },
                "required": [
                  "model",
                  "messages"
                ]
              },
              "examples": {
                "basic": {
                  "summary": "Basic chat completion",
                  "value": {
                    "model": "qwen-max-latest",
                    "messages": [
                      {
                        "role": "user",
                        "content": "Hello, how are you?"
                      }
                    ],
                    "stream": false
                  }
                },
                "web_search": {
                  "summary": "Chat with web search tool",
                  "value": {
                    "model": "qwen-max-latest",
                    "tools": [
                      {
                        "type": "web_search"
                      }
                    ],
                    "messages": [
                      {
                        "role": "user",
                        "content": "What are the latest AI developments?"
                      }
                    ],
                    "stream": false
                  }
                },
                "thinking": {
                  "summary": "Thinking mode",
                  "value": {
                    "model": "qwen-max-latest",
                    "enable_thinking": true,
                    "thinking_budget": 30000,
                    "messages": [
                      {
                        "role": "user",
                        "content": "Solve this complex math problem: ..."
                      }
                    ],
                    "stream": false
                  }
                },
                "coder": {
                  "summary": "Code generation (qwen3-coder-plus)",
                  "value": {
                    "model": "qwen3-coder-plus",
                    "tools": [
                      {
                        "type": "code"
                      }
                    ],
                    "messages": [
                      {
                        "role": "user",
                        "content": "Write a JavaScript function to add two numbers"
                      }
                    ],
                    "stream": false
                  }
                },
                "multimodal": {
                  "summary": "Vision-style multimodal",
                  "value": {
                    "model": "qwen-max-latest",
                    "messages": [
                      {
                        "role": "user",
                        "content": [
                          {
                            "type": "text",
                            "text": "What do you see in this image?"
                          },
                          {
                            "type": "image_url",
                            "image_url": {
                              "url": "https://download.samplelib.com/png/sample-hut-400x300.png"
                            }
                          }
                        ]
                      }
                    ],
                    "stream": false
                  }
                },
                "deep_research": {
                  "summary": "Deep research",
                  "value": {
                    "model": "qwen-deep-research",
                    "messages": [
                      {
                        "role": "user",
                        "content": "Research the latest developments in quantum computing"
                      }
                    ],
                    "stream": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "object": {
                      "type": "string",
                      "example": "chat.completion"
                    },
                    "created": {
                      "type": "integer"
                    },
                    "model": {
                      "type": "string"
                    },
                    "system_fingerprint": {
                      "type": "string"
                    },
                    "choices": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "index": {
                            "type": "integer"
                          },
                          "message": {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string"
                              },
                              "content": {
                                "type": "string"
                              },
                              "reasoning_content": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "role",
                              "content"
                            ]
                          },
                          "finish_reason": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "required": [
                          "index",
                          "message"
                        ]
                      }
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "created",
                    "model",
                    "choices"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "param": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "code": {
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "integer"
                            }
                          ]
                        }
                      },
                      "required": [
                        "message",
                        "type",
                        "code"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "param": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "code": {
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "integer"
                            }
                          ]
                        }
                      },
                      "required": [
                        "message",
                        "type",
                        "code"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "param": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "code": {
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "integer"
                            }
                          ]
                        }
                      },
                      "required": [
                        "message",
                        "type",
                        "code"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/images/generations": {
      "post": {
        "summary": "Generate an image from a text prompt",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "prompt": {
                    "type": "string"
                  },
                  "size": {
                    "type": "string",
                    "example": "1024x1024",
                    "description": "Target size; proxy maps to aspect ratio"
                  }
                },
                "required": [
                  "prompt"
                ]
              },
              "example": {
                "prompt": "A beautiful sunset over mountains",
                "size": "1024x1024"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "created": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "url": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "url"
                        ]
                      }
                    }
                  },
                  "required": [
                    "created",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "param": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "code": {
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "integer"
                            }
                          ]
                        }
                      },
                      "required": [
                        "message",
                        "type",
                        "code"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "param": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "code": {
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "integer"
                            }
                          ]
                        }
                      },
                      "required": [
                        "message",
                        "type",
                        "code"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/images/edits": {
      "post": {
        "summary": "Edit an image using a prompt",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "prompt": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": [
                  "prompt",
                  "image"
                ]
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "prompt": {
                    "type": "string"
                  },
                  "image": {
                    "oneOf": [
                      {
                        "type": "string",
                        "format": "uri",
                        "description": "Remote image URL"
                      },
                      {
                        "type": "string",
                        "description": "Data URL base64 image"
                      }
                    ]
                  }
                },
                "required": [
                  "prompt",
                  "image"
                ]
              },
              "example": {
                "prompt": "Add a rainbow in the background",
                "image": "https://example.com/image.jpg"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "created": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "url": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "url"
                        ]
                      }
                    }
                  },
                  "required": [
                    "created",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "param": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "code": {
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "integer"
                            }
                          ]
                        }
                      },
                      "required": [
                        "message",
                        "type",
                        "code"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "param": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "code": {
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "integer"
                            }
                          ]
                        }
                      },
                      "required": [
                        "message",
                        "type",
                        "code"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/videos/generations": {
      "post": {
        "summary": "Generate a video from a text prompt",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "prompt": {
                    "type": "string"
                  },
                  "size": {
                    "type": "string",
                    "example": "1024x1024",
                    "description": "Target size; proxy maps to aspect ratio"
                  }
                },
                "required": [
                  "prompt"
                ]
              },
              "example": {
                "prompt": "A cat playing with a ball of yarn in slow motion",
                "size": "1280x720"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "created": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "url": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "url"
                        ]
                      }
                    }
                  },
                  "required": [
                    "created",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "param": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "code": {
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "integer"
                            }
                          ]
                        }
                      },
                      "required": [
                        "message",
                        "type",
                        "code"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "param": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "code": {
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "integer"
                            }
                          ]
                        }
                      },
                      "required": [
                        "message",
                        "type",
                        "code"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/chats/delete": {
      "delete": {
        "summary": "Delete all chats (via DELETE method)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "All chats deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "All chats deleted successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean"
                        },
                        "request_id": {
                          "type": "string"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "All chats deleted successfully",
                  "data": {
                    "success": true,
                    "request_id": "26ef857e-fd55-4d35-b10a-78b43553a640",
                    "data": {
                      "status": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "param": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "code": {
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "integer"
                            }
                          ]
                        }
                      },
                      "required": [
                        "message",
                        "type",
                        "code"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "param": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "code": {
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "integer"
                            }
                          ]
                        }
                      },
                      "required": [
                        "message",
                        "type",
                        "code"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Delete all chats (via POST method)",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "All chats deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "All chats deleted successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean"
                        },
                        "request_id": {
                          "type": "string"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "All chats deleted successfully",
                  "data": {
                    "success": true,
                    "request_id": "26ef857e-fd55-4d35-b10a-78b43553a640",
                    "data": {
                      "status": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "param": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "code": {
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "integer"
                            }
                          ]
                        }
                      },
                      "required": [
                        "message",
                        "type",
                        "code"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "param": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "code": {
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "integer"
                            }
                          ]
                        }
                      },
                      "required": [
                        "message",
                        "type",
                        "code"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}