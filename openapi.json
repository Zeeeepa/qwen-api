{
  "openapi": "3.1.0",
  "info": {
    "title": "Qwen OpenAI-Compatible API",
    "description": "OpenAI-compatible API for Qwen language models",
    "version": "1.0.0",
    "contact": {
      "name": "Qwen API Support",
      "url": "https://qwen.aikit.club"
    }
  },
  "servers": [
    {
      "url": "http://localhost:7050",
      "description": "Local development server"
    },
    {
      "url": "https://qwen.aikit.club",
      "description": "Qwen API server"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "Health check",
        "description": "Check if the API server is running",
        "responses": {
          "200": {
            "description": "Server is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "service": {
                      "type": "string",
                      "example": "Qwen OpenAI Proxy"
                    },
                    "version": {
                      "type": "string",
                      "example": "1.0.0"
                    },
                    "endpoints": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/models": {
      "get": {
        "summary": "List models",
        "description": "List all available models",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/chat/completions": {
      "post": {
        "summary": "Create chat completion",
        "description": "Create a chat completion using a Qwen model",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatRequest"
              },
              "examples": {
                "simple": {
                  "summary": "Simple chat request",
                  "value": {
                    "model": "qwen-max-latest",
                    "messages": [
                      {
                        "role": "user",
                        "content": "Hello! Can you help me?"
                      }
                    ],
                    "temperature": 0.7
                  }
                },
                "withContext": {
                  "summary": "Chat with context",
                  "value": {
                    "model": "qwen-plus-latest",
                    "messages": [
                      {
                        "role": "system",
                        "content": "You are a helpful coding assistant."
                      },
                      {
                        "role": "user",
                        "content": "How do I fix this Python error?"
                      }
                    ],
                    "temperature": 0.5,
                    "max_tokens": 1000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Message": {
        "type": "object",
        "required": ["role", "content"],
        "properties": {
          "role": {
            "type": "string",
            "enum": ["system", "user", "assistant"],
            "description": "The role of the message author"
          },
          "content": {
            "type": "string",
            "description": "The content of the message"
          }
        }
      },
      "ChatRequest": {
        "type": "object",
        "required": ["model", "messages"],
        "properties": {
          "model": {
            "type": "string",
            "enum": [
              "qwen-max-latest",
              "qwen-plus-latest",
              "qwen-turbo-latest"
            ],
            "description": "ID of the model to use"
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            },
            "minItems": 1,
            "description": "List of messages comprising the conversation"
          },
          "temperature": {
            "type": "number",
            "minimum": 0,
            "maximum": 2,
            "default": 0.7,
            "description": "Sampling temperature (0-2)"
          },
          "max_tokens": {
            "type": "integer",
            "minimum": 1,
            "maximum": 32000,
            "default": 2000,
            "description": "Maximum tokens to generate"
          },
          "top_p": {
            "type": "number",
            "minimum": 0,
            "maximum": 1,
            "default": 1,
            "description": "Nucleus sampling parameter"
          },
          "stream": {
            "type": "boolean",
            "default": false,
            "description": "Whether to stream responses"
          }
        }
      },
      "ChatChoice": {
        "type": "object",
        "required": ["index", "message", "finish_reason"],
        "properties": {
          "index": {
            "type": "integer",
            "description": "Choice index"
          },
          "message": {
            "$ref": "#/components/schemas/Message"
          },
          "finish_reason": {
            "type": "string",
            "enum": ["stop", "length", "content_filter"],
            "description": "Reason the model stopped"
          }
        }
      },
      "Usage": {
        "type": "object",
        "properties": {
          "prompt_tokens": {
            "type": "integer"
          },
          "completion_tokens": {
            "type": "integer"
          },
          "total_tokens": {
            "type": "integer"
          }
        }
      },
      "ChatResponse": {
        "type": "object",
        "required": ["id", "object", "created", "model", "choices"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique completion ID"
          },
          "object": {
            "type": "string",
            "enum": ["chat.completion"],
            "description": "Object type"
          },
          "created": {
            "type": "integer",
            "description": "Unix timestamp"
          },
          "model": {
            "type": "string",
            "description": "Model used"
          },
          "system_fingerprint": {
            "type": "string",
            "description": "System fingerprint"
          },
          "choices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChatChoice"
            }
          },
          "usage": {
            "$ref": "#/components/schemas/Usage"
          }
        }
      },
      "Model": {
        "type": "object",
        "required": ["id", "object", "created", "owned_by"],
        "properties": {
          "id": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "enum": ["model"]
          },
          "created": {
            "type": "integer"
          },
          "owned_by": {
            "type": "string"
          }
        }
      },
      "ModelListResponse": {
        "type": "object",
        "required": ["object", "data"],
        "properties": {
          "object": {
            "type": "string",
            "enum": ["list"]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Model"
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "required": ["detail"],
        "properties": {
          "detail": {
            "type": "string",
            "description": "Error message"
          }
        }
      }
    }
  }
}

